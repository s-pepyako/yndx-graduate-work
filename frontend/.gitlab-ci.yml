stages:
  - build
  - release

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

frontend-build-job:
  stage: build
  image: 
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [ "" ]
  script:
    - echo "version- ${VERSION}"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/momo-frontend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true

frontend-release-job:
  stage: release
  needs:
    - frontend-build-job
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA latest

frontend-deploy-job:
  stage: deploy
  needs:
    - frontend-release-job
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /CD/ 
  image:
    name: alpine/helm:3.14.4
    entrypoint: [ "sh" ]
  script:
    - mkdir /root/.kube
    - echo '${KUBECONFIG}' > /root/.kube/config 
    - chmod 700 -R /root/.kube
    - helm upgrade --install --atomic
      --set frontend.image=$CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA 
      momo-store deploy/.
    - rm /root/.kube/config 